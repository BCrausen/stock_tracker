{"remainingRequest":"/Users/bcrausen/Desktop/stocks_tracker/node_modules/babel-loader/lib/index.js!/Users/bcrausen/Desktop/stocks_tracker/node_modules/eslint-loader/index.js??ref--13-0!/Users/bcrausen/Desktop/stocks_tracker/src/store/symbols.js","dependencies":[{"path":"/Users/bcrausen/Desktop/stocks_tracker/src/store/symbols.js","mtime":1612660998133},{"path":"/Users/bcrausen/Desktop/stocks_tracker/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bcrausen/Desktop/stocks_tracker/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/bcrausen/Desktop/stocks_tracker/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/bcrausen/Desktop/stocks_tracker/src/store/symbols.js"],"names":["state","symbols","localStorage","getItem","JSON","parse","symbolData","symbolNameError","symbolServerError","loadingStatus","getters","allSymbolData","getSymbolNameError","getSymbolServerError","getLoadingStatus","actions","getSymbolData","commit","length","fetch","join","headers","then","response","json","data","Object","keys","forEach","key","push","symbol","quote","latestPrice","change","catch","addSymbol","newSymbol","symbolUpperCase","toUpperCase","deleteSymbol","symbolName","removeAllSymbols","mutations","setSymbolData","setItem","stringify","addSymbolData","removeSymbol","filter","removeItem","setSymbolNameError","newError","setSymbolServerError","setLoadingStatus","newStatus"],"mappings":"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","sourcesContent":["const state = {\n  symbols: localStorage.getItem('symbols') ? JSON.parse(localStorage.getItem('symbols')) : [\"TLSA\", \"AAPL\", \"GOOG\"],\n  symbolData: [],\n  symbolNameError: \"\",\n  symbolServerError: \"\",\n  loadingStatus: false\n};\n\nexport const getters = {\n  allSymbolData: state => state.symbolData,\n  getSymbolNameError: state => state.symbolNameError,\n  getSymbolServerError: state => state.symbolServerError,\n  getLoadingStatus: state => state.loadingStatus\n};\n\nexport const actions = {\n  async getSymbolData({commit}) {\n    commit('setLoadingStatus', true);\n    let symbolData = [];\n    if (state.symbols.length > 0) {\n      await fetch(`https://sandbox.iexapis.com/v1/stock/market/batch?types=quote&symbols=${state.symbols.join()}&range=5y%20&token=Tpk_022d4500c4ab4ff0942f71814f7f7866`, {headers: {'Content-Type': 'application/json'}})\n      .then(response => response.json())\n      .then(data => {\n        Object.keys(data).forEach(function(key) {\n          symbolData.push({symbol: data[key].quote.symbol, latestPrice: data[key].quote.latestPrice, change: data[key].quote.change})\n        });\n        commit('setSymbolData', symbolData);\n        commit('setSymbolServerError', \"\");\n        commit('setLoadingStatus', false);\n      })\n      .catch(() => {\n        commit('setSymbolServerError', \"Couldn't contact server\");\n        commit('setLoadingStatus', false);\n      });\n    }\n    else {\n      commit('setSymbolData', symbolData);\n      commit('setLoadingStatus', false);\n    }\n  },\n  async addSymbol({commit}, newSymbol) {\n    commit('setLoadingStatus', true);\n    let symbolUpperCase = newSymbol.toUpperCase();\n    await fetch(`https://sandbox.iexapis.com/stable/stock/${symbolUpperCase}/quote?token=Tpk_022d4500c4ab4ff0942f71814f7f7866`, {headers: {'Content-Type': 'application/json'}})\n    .then(response => response.json())\n    .then(data => {\n      if (data.symbol === symbolUpperCase) {\n        let symbolData = {symbol: data.symbol, latestPrice: data.latestPrice, change: data.change};\n        commit('addSymbol', symbolUpperCase);\n        commit('addSymbolData', symbolData);\n        commit('setSymbolNameError', \"\");\n      }\n      commit('setLoadingStatus', false);\n    })\n    .catch(() => {\n      commit('setSymbolNameError', \"Couldn't find symbol\");\n      commit('setLoadingStatus', false);\n    });\n\n  },\n  async deleteSymbol({commit}, symbolName) {\n    commit('removeSymbol', symbolName);\n  },\n  async removeAllSymbols({commit}) {\n    commit('removeAllSymbols');\n    commit('setSymbolData', [])\n  }\n};\n\nexport const mutations = {\n  setSymbolData: (state, symbolData) => (state.symbolData = symbolData),\n  addSymbol: (state, newSymbol) => {\n    state.symbols.push(newSymbol);\n    localStorage.setItem('symbols', JSON.stringify(state.symbols));\n  },\n  addSymbolData: (state,symbolData) => (state.symbolData.push(symbolData)),\n  removeSymbol: (state,symbolName) => {\n    state.symbols = state.symbols.filter(symbol => symbol !== symbolName);\n    state.symbolData = state.symbolData.filter(data => data.symbol !== symbolName);\n    localStorage.setItem('symbols', JSON.stringify(state.symbols));\n  },\n  removeAllSymbols: (state) => {\n    state.symbols = [];\n    state.symbolData = [];\n    localStorage.removeItem('symbols');\n  },\n  setSymbolNameError: (state, newError) => (state.symbolNameError = newError),\n  setSymbolServerError: (state, newError) => (state.symbolServerError = newError),\n  setLoadingStatus: (state, newStatus) => (state.loadingStatus = newStatus)\n};\n\nexport default {state, getters, actions, mutations}\n"]}]}